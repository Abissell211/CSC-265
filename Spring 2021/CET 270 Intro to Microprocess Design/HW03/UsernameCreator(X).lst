
CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 1


                             1          TTL     "HW03 - Username Creator"
                             2  
                             3  ****************************************************************************
                             4  * 1) HEADER block - overall info about the program                         *
                             5  ****************************************************************************
                             6  * Project name:   UsernameCreator
                             7  * Author(s):      Andrew D. Bissell
                             8  * Date:           04/07/2021
                             9  * Description:
                            10  *   This program allows a user to create a password that is 6 - 20 characters
                            11  *   long with letters a - z lower case and capital, and with periods only. 
                            12  *   The user will have to input the username twice to check if it matches if
                            13  *   it does not follow criteria or the first username does not match the 
                            14  *   second the user will have to restart from the beginning. If the usernames
                            15  *   match the user will get a congratulations message and the username displayed.
                            16  ****************************************************************************
                            17  * 2) EQUATE section - define symbolic names for various values             *
                            18  ****************************************************************************
                            19  ;    a) constants...
    =000D                   20  CR      EQU     $0D       ;ASCII Carriage Return (To create a newline on output)
    =0004                   21  EOT     EQU     $04       ;ASCII for End Of Transmission (Use with OUTSTRG)
    =001B                   22  ESC     EQU     $1B       ;ASCII for Escape (For quitting the program)
                            23  
                            24  ;    b) "system" objects (I/O registers, monitor routines, etc.)
                            25  * BUFFALO utility routine entry points
    =FFB8                   26  OUTA     EQU     $FFB8    ;BUFFALO rtn to output char in acc A
    =FFC7                   27  OUTSTRG  EQU     $FFC7    ;BUFFALO rtn to output a string
    =FFCD                   28  INCHAR   EQU     $FFCD    ;BUFFALO rtn to take a user input CHAR
                            29  
                            30  ;    c) memory map equates
                            31  
    =0100                   32  USERDATA EQU     $0100    ;Where to place read/write(RAM) variables
    =2000                   33  CODE     EQU     $2000    ;Where to start placing program object code
                            34                            ;32K RAM (U5) on CME11E9-EVBU board
                            35  ****************************************************************************
                            36  * 3) CODE section - actual program code                                    *
                            37  ****************************************************************************
2000                        38           ORG     CODE     ; Tell assembler where to begin object code.
                            39          
    =2000                   40  Main     EQU     *        ; Define label for start of Main program.
                            41  
2000 CE 20 ED          3~   42           LDX     #Greet  
2003 BD FF C7          6~   43           JSR     OUTSTRG  ; Displays the welcome message.
                            44  ;                          "Welcome to the username creator!"
2006 20 19             3~   45           BRA     Prompt   ; Skip error messages and begin inputs.
                            46           
                            47  ***************************** ERROR MESSAGES! ******************************         
2008 CE 22 29          3~   48  ErrMsg1  LDX     #Err2L2S
200B BD FF C7          6~   49           JSR     OUTSTRG  ; Displays the error message for too long or too short username.
                            50  ;                          "ERROR!!! Username is too long or too short! 
                            51  ;                           Must be between 0-26 characters!"
200E 5F                2~   52           CLRB             ; Clear ACCB used to check for errors.0
200F 20 10             3~   53           BRA     Prompt   ; Return to start of program inputs.
                            54           
2011 CE 22 78          3~   55  ErrMsg2  LDX     #ErrIncIn

CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 2


2014 BD FF C7          6~   56           JSR     OUTSTRG  ; Displays the error message for username criteria not met.
                            57  ;                          "ERROR!!! Username does not match criteria please try again!"
2017 5F                2~   58           CLRB             ; Clear ACCB used to check for errors.
2018 20 07             3~   59           BRA     Prompt   ; Return to start of program inputs.
                            60           
201A CE 22 B6          3~   61  ErrMsg3  LDX     #ErrNoMat
201D BD FF C7          6~   62           JSR     OUTSTRG  ; Displays the error message for usernames not matching.
                            63  ;                          "ERROR!!! Usernames do not match please try again!"
2020 5F                2~   64           CLRB             ; Clear ACCB used to check for errors.
                            65  ***************************** Username Input 1 *****************************
2021 CE 21 0F          3~   66  Prompt   LDX     #Prompt1
2024 BD FF C7          6~   67           JSR     OUTSTRG  ; Displays the prompt message to input the username.
                            68  ;                          "Please enter a username 6-20 characters long lowercase 
                            69  ;                           and capital letters accatable,"
2027 5F                2~   70           CLRB     
2028 CE 01 00          3~   71           LDX     #UsName1 ; Loads the first username memory locations in index x.
202B BD 20 7F          6~   72           JSR     INSERUNA ; Jumps to the insert username subroutine.
                            73           
202E 81 1B             2~   74           CMPA    #ESC     ; Checks if the user wants to quit program.
2030 27 46             3~   75           BEQ     Quit     ; If the user pressed escape quit program.
                            76           
2032 C1 FF             2~   77           CMPB    #$FF     ; Checks if there was an error in the previous subroutine.
2034 27 D2             3~   78           BEQ     ErrMsg1  ; If there was an error display the too long or too short error.
                            79  
2036 CE 00 00          3~   80           LDX     #$00     ; Reset index x back at zero.
2039 CE 01 00          3~   81           LDX     #UsName1 ; Re-load the first username with index x.        
203C BD 20 A9          6~   82           JSR     CHKUNC   ; Jump to the check username subroutine.
                            83           
203F C1 FF             2~   84           CMPB    #$FF     ; Checks if there was an error in the previous subroutine.
2041 27 CE             3~   85           BEQ     ErrMsg2  ; If there was an error display the username doesn't meet 
                            86  ;                           criteria error message.
                            87  ***************************** Username Input 2 *****************************         
2043 CE 21 CF          3~   88           LDX     #Prompt2 
2046 BD FF C7          6~   89           JSR     OUTSTRG  ; Displays the prompt message for username re-entry.
                            90  ;                          "Please re-enter the username (press enter to finish username or 
                            91  ;                           escape to quit program): "  
2049 5F                2~   92           CLRB             ; Clear ACCB used to check for errors.  
204A CE 01 1E          3~   93           LDX     #UsName2 ; Loads the second username memory locations in index x. 
204D BD 20 7F          6~   94           JSR     INSERUNA ; Jumps to the insert username subroutine.
                            95           
2050 81 1B             2~   96           CMPA    #ESC     ; Checks if the user wants to quit program.
2052 27 24             3~   97           BEQ     Quit     ; If the user pressed escape quit program.
                            98           
2054 C1 FF             2~   99           CMPB    #$FF     ; Checks if there was an error in the previous subroutine.
2056 27 B0             3~  100           BEQ     ErrMsg1  ; If there was an error display the too long or too short error.
                           101   
2058 CE 00 00          3~  102           LDX     #$00     ; Reset index x back at zero.
205B CE 01 1E          3~  103           LDX     #UsName2 ; Re-load the second username with index x.         
205E BD 20 A9          6~  104           JSR     CHKUNC   ; Jump to the check username subroutine.
                           105           
2061 C1 FF             2~  106           CMPB    #$FF     ; Checks if there was an error in the previous subroutine.
2063 27 AC             3~  107           BEQ     ErrMsg2  ; If there was an error display the username doesn't meet 
                           108  ;                            criteria error message.
                           109  ***************************** Check Usernames ******************************                  
2065 BD 20 D7          6~  110           JSR     CHKUN1A2 ; Jump to the check username one and two 

CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 3


                           111           
2068 C1 FF             2~  112           CMPB    #$FF     ; Checks if there was an error in the previous subroutine. 
206A 27 AE             3~  113           BEQ     ErrMsg3  ; If there was an error display the usernames do not match error.
                           114           
206C CE 22 EA          3~  115           LDX     #DisplyUN 
206F BD FF C7          6~  116           JSR     OUTSTRG  ; Display the compeleted username message and username.
                           117          ;                  "Congratulations! The validated username entered was: " 
2072 CE 01 00          3~  118           LDX     #UsName1 ; Load index x with the username that was validated.
2075 BD FF C7          6~  119           JSR     OUTSTRG  ; Display the user created username.
                           120         
2078 CE 23 20          3~  121  Quit     LDX     #QuitMess  
207B BD FF C7          6~  122           JSR     OUTSTRG  ; Displays the quit message.
                           123  ;                          "Program Terminated! Have a great day!"
                           124          
207E 3F               14~  125           SWI              ; Return to BUFFALO monitor on HC11EVB.
                           126  ****************************************************************************
                           127  *  Username Creator Subroutine -INSERUNA-                                  *
                           128  ****************************************************************************
                           129  * This Subroutine takes user inputted characters and creates a username in a
                           130  *  location of memory.
                           131  *
                           132  * Parameters: Index X must point to an array of bytes to store CHARS into.
                           133  *             ACCB is used for ERROR checks, and character count.
                           134  ****************************************************************************
    =207F                  135  INSERUNA EQU     *        ; Start of subroutine.
                           136  
207F BD FF CD          6~  137  Start1   JSR     INCHAR   ; Store the CHAR in ACCA
                           138  
2082 81 0D             2~  139           CMPA    #CR      ; Checks to see if the user pressed enter (finish username).
2084 27 0A             3~  140           BEQ     InsrEOT  ; If the user pressed enter move to insert EOT.
                           141           
2086 81 1B             2~  142           CMPA    #ESC     ; Checks to see if the user pressed escape (quit program).
2088 27 18             3~  143           BEQ     Escape   ; If the user pressed escape move to escape to quit program.
                           144                  
208A A7 00             4~  145           STAA    0,X      ; Store the CHAR in the username memory found with index x.
208C 08                3~  146           INX              ; Increment to the next memory location.
208D 5C                2~  147           INCB             ; Increment the count using ACCB to find if the username is too
                           148  ;                           small or too large.
208E 20 EF             3~  149           BRA     Start1   ; Restart for the next user input.
                           150          
2090 86 04             2~  151  InsrEOT  LDAA    #EOT     ; Load the EOT CHAR in ACCA.
2092 A7 00             4~  152           STAA    0,X      ; Stores the EOT at the next data slot.
                           153  
2094 C1 05             2~  154           CMPB    #$05     ; Checks using increments of B if the input username is too small.
2096 23 06             3~  155           BLS     ErrMsg   ; Will give an error message if B <= 5.
                           156           
2098 C1 1B             2~  157           CMPB    #$1B     ; Checks using increments of B if the input username is too large.
209A 24 02             3~  158           BHS     ErrMsg   ; Will give an error message if B >= 27.
                           159           
209C 20 0A             3~  160           BRA     Fin      ; Move to RTS. 
                           161           
209E C6 FF             2~  162  ErrMsg   LDAB    #$FF     ; Load ACCB with $FF(-1) to signal error.
20A0 20 06             3~  163           BRA     Fin      ; Move to RTS.
                           164           
20A2 86 04             2~  165  Escape   LDAA    #EOT     ; Load ACCA with EOT to finish the username as is.

CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 4


20A4 A7 00             4~  166           STAA    0,X      ; Stores EOT in the next memory location.
20A6 86 1B             2~  167           LDAA    #ESC     ; Load ACCA with the escape charater to quit once returned to main.
                           168           
20A8 39                5~  169  Fin      RTS              ; Return from subroutine.
                           170  ****************************************************************************
                           171  *  Check Username Criteria Subroutine -CHKUNC-                             *
                           172  ****************************************************************************
                           173  * This Subroutine checks the inputed string for bad data the good data is:
                           174  * 6-20 characters, lowercase/capital letters, and periods
                           175  *  
                           176  * Parameters: Index x must point to a filled array to check each character.
                           177  *             ACCB is used for ERROR checks.
                           178  ****************************************************************************
    =20A9                  179  CHKUNC   EQU     *        ; Start of subroutine.
                           180           
20A9 A6 00             4~  181  Start2   LDAA    0,X      ; Load ACCA with the memory location of the username
                           182  ;                          using index x.
                           183  
20AB 81 04             2~  184           CMPA    #EOT     ; Checks if the memory location hits the end of the username.
20AD 27 27             3~  185           BEQ     Stop     ; If it does, stop checking and move to the end of subroutine.
                           186           
20AF 81 2D             2~  187           CMPA    #$2D     ; Checks if the character is a '-' or lower.
20B1 23 1C             3~  188           BLS     BAD      ; If it is, its bad data move to send error message.
                           189           
20B3 81 2E             2~  190           CMPA    #$2E     ; Checks if the character is a '.'.
20B5 27 1C             3~  191           BEQ     GOOD     ; If it is, its good data move to next memory location.  
                           192  
20B7 81 2F             2~  193           CMPA    #$2F     ; Checks if the character is a '/'.
20B9 27 14             3~  194           BEQ     BAD      ; If it is, its bad data move to send error message.
                           195  
20BB 81 39             2~  196           CMPA    #$39     ; Checks if the character is a '9' or lower.
20BD 23 14             3~  197           BLS     GOOD     ; If it is, its good data move to next memory location. 
                           198  
20BF 81 40             2~  199           CMPA    #$40     ; Checks if the character is a '@' or lower.
20C1 23 0C             3~  200           BLS     BAD      ; If it is, its bad data move to send error message.
                           201  
20C3 81 5A             2~  202           CMPA    #$5A     ; Checks if the character is a ' ' or lower.
20C5 23 0C             3~  203           BLS     GOOD     ; If it is, its good data move to next memory location. 
                           204   
20C7 81 60             2~  205           CMPA    #$60     ; Checks if the character is a ' ' or lower.
20C9 23 04             3~  206           BLS     BAD      ; If it is, its bad data move to send error message.
                           207  
20CB 81 7A             2~  208           CMPA    #$7A     ; Checks if the character is a ' ' or lower.
20CD 23 04             3~  209           BLS     GOOD     ; If it is, its good data move to next memory location. 
                           210  
20CF C6 FF             2~  211  BAD      LDAB    #$FF     ; Since it is bad data, load ACCB with the error value (-1).
20D1 20 03             3~  212           BRA     Stop     ; Move to RTS.
                           213           
20D3 08                3~  214  GOOD     INX              ; Increment X to get the next character.
20D4 20 D3             3~  215           BRA     Start2   ; Restart at the beginning to check next character.
                           216  
20D6 39                5~  217  Stop     RTS              ; Return from subroutine.         
                           218  ****************************************************************************
                           219  *  Check Username 1st and 2nd Input -CHKUN1A2-                             *
                           220  ****************************************************************************

CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 5


                           221  * This Subroutine uses the x and y index registers to check the first and second
                           222  *     usernames character by character to see if they match.
                           223  *  
                           224  * Parameters: Index x points to the first username array and Index y points 
                           225  *              to the second username array to compare against each other.
                           226  *              ACCA is used with Index x and ACCB is used with Index y.
                           227  *              ACCB is still used for ERROR checks (if error is found ACCB is forced
                           228  *                                                    with $FF)
                           229  ****************************************************************************
    =20D7                  230  CHKUN1A2 EQU     *        ; Start of subroutine.
                           231  
20D7 CE 00 00          3~  232           LDX     #$00     ; Reset index x to zero.
20DA CE 01 00          3~  233           LDX     #UsName1 ; Load the first username using index x.
20DD 20 05             3~  234           BRA     Begin    ; Move to the start of the checks.
                           235           
20DF 08                3~  236  Next     INX
20E0 81 04             2~  237           CMPA    #EOT     ; Check if first username has hit EOT.
20E2 27 08             3~  238           BEQ     ChkStop   ; If it does move to the last check.
                           239           
20E4 A6 00             4~  240  Begin    LDAA    0,X      ; Load ACCA with the character found at x index.
20E6 A1 1E             4~  241           CMPA    30,X     ; Check if the characters for the first and second 
                           242           ;                 username match.
20E8 27 F5             3~  243           BEQ     Next     ; If they do, go back to check the next character.
                           244           
20EA C6 FF             2~  245  ChkErr   LDAB    #$FF     ; If they don't, load ACCB with the error value(-1).     
                           246  
20EC 39                5~  247  ChkStop  RTS              ; Return from subroutine.   
                           248  ****************************************************************************
                           249  * 4) DATA section - variables & other data used by program                 *
                           250  ****************************************************************************
                           251  ;    a) constant data definitions (FCB,FDB,FCC)...
20ED 57 65 6C 63 6F 6D     252  Greet    FCB      "Welcome to the username creator!",CR,EOT
20F3 65 20 74 6F 20 74
20F9 68 65 20 75 73 65
20FF 72 6E 61 6D 65 20
2105 63 72 65 61 74 6F
210B 72 21 0D 04
210F 50 6C 65 61 73 65     253  Prompt1  FCB      "Please enter a username 6-20 characters long lowercase and capital letters accatable,",CR,"no special characters allowed except periods",CR,"(press enter to finish username or escape to quit program): ",EOT
2115 20 65 6E 74 65 72
211B 20 61 20 75 73 65
2121 72 6E 61 6D 65 20
2127 36 2D 32 30 20 63
212D 68 61 72 61 63 74
2133 65 72 73 20 6C 6F
2139 6E 67 20 6C 6F 77
213F 65 72 63 61 73 65
2145 20 61 6E 64 20 63
214B 61 70 69 74
21CF 50 6C 65 61 73 65     254  Prompt2  FCB      "Please re-enter the username (press enter to finish username or escape to quit program): ",EOT
21D5 20 72 65 2D 65 6E
21DB 74 65 72 20 74 68
21E1 65 20 75 73 65 72
21E7 6E 61 6D 65 20 28
21ED 70 72 65 73 73 20
21F3 65 6E 74 65 72 20

CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 6


21F9 74 6F 20 66 69 6E
21FF 69 73 68 20 75 73
2205 65 72 6E 61 6D 65
220B 20 6F 72 20
2229 45 52 52 4F 52 21     255  Err2L2S  FCB      "ERROR!!! Username is too long or too short! Must be between 0-26 characters!",CR,CR,EOT
222F 21 21 20 55 73 65
2235 72 6E 61 6D 65 20
223B 69 73 20 74 6F 6F
2241 20 6C 6F 6E 67 20
2247 6F 72 20 74 6F 6F
224D 20 73 68 6F 72 74
2253 21 20 4D 75 73 74
2259 20 62 65 20 62 65
225F 74 77 65 65 6E 20
2265 30 2D 32 36
2278 45 52 52 4F 52 21     256  ErrIncIn FCB      "ERROR!!! Username does not match criteria please try again!",CR,CR,EOT
227E 21 21 20 55 73 65
2284 72 6E 61 6D 65 20
228A 64 6F 65 73 20 6E
2290 6F 74 20 6D 61 74
2296 63 68 20 63 72 69
229C 74 65 72 69 61 20
22A2 70 6C 65 61 73 65
22A8 20 74 72 79 20 61
22AE 67 61 69 6E 21 0D
22B4 0D 04
22B6 45 52 52 4F 52 21     257  ErrNoMat FCB      "ERROR!!! Usernames do not match please try again!",CR,CR,EOT
22BC 21 21 20 55 73 65
22C2 72 6E 61 6D 65 73
22C8 20 64 6F 20 6E 6F
22CE 74 20 6D 61 74 63
22D4 68 20 70 6C 65 61
22DA 73 65 20 74 72 79
22E0 20 61 67 61 69 6E
22E6 21 0D 0D 04
22EA 43 6F 6E 67 72 61     258  DisplyUN FCB      "Congratulations! The validated username entered was: ",EOT
22F0 74 75 6C 61 74 69
22F6 6F 6E 73 21 20 54
22FC 68 65 20 76 61 6C
2302 69 64 61 74 65 64
2308 20 75 73 65 72 6E
230E 61 6D 65 20 65 6E
2314 74 65 72 65 64 20
231A 77 61 73 3A 20 04
2320 0D 50 72 6F 67 72     259  QuitMess FCB      CR,"Program Terminated! Have a great day!",EOT
2326 61 6D 20 54 65 72
232C 6D 69 6E 61 74 65
2332 64 21 20 48 61 76
2338 65 20 61 20 67 72
233E 65 61 74 20 64 61
2344 79 21 04
                           260  
                           261  ;    b) variable data allocations (RMB)...
                           262  * Input Buffer
0100                       263           ORG      USERDATA ; To save the user input at a location

CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 7


                           264  ;                            starting at $0100
0100 (001E)                265  UsName1  RMB     30;
011E (001E)                266  UsName2  RMB     30;
                           267  ****************************************************************************
                           268  ; End of assembly source code
013C                       269          END
    Cycles Counted:  362

------------
 269 Lines
   0 Errors
   0 Warnings


CalU 68HC11 Cross Assembler, ver. 2.2                                                         4/12/2021 10:10:55
HW03 - Username Creator                                                                                   Page 8


                                            S Y M B O L   T A B L E

20CF BAD                    20E4 Begin                  20D7 CHKUN1A2               20A9 CHKUNC                 
2000 CODE                   000D CR                     20EA ChkErr                 20EC ChkStop                
22EA DisplyUN               0004 EOT                    001B ESC                    2229 Err2L2S                
2278 ErrIncIn               209E ErrMsg                 2008 ErrMsg1                2011 ErrMsg2                
201A ErrMsg3                22B6 ErrNoMat               20A2 Escape                 20A8 Fin                    
20D3 GOOD                   20ED Greet                  FFCD INCHAR                 207F INSERUNA               
2090 InsrEOT                2000 Main                   20DF Next                   FFB8 OUTA                   
FFC7 OUTSTRG                2021 Prompt                 210F Prompt1                21CF Prompt2                
2078 Quit                   2320 QuitMess               207F Start1                 20A9 Start2                 
20D6 Stop                   0100 USERDATA               0100 UsName1                011E UsName2                

  40 Symbols defined.
